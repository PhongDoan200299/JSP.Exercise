/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2024-02-07 06:41:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.khachhang;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.KhachHang;

public final class changePassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.KhachHang");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("	crossorigin=\"anonymous\" />\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".red {\r\n");
      out.write("	color: red;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- Kiểm tra đăng nhập -->\r\n");
      out.write("	");

	Object obj = session.getAttribute("khachHang");
	KhachHang khachHang = null;
	if (obj != null)
		khachHang = (KhachHang) obj;
	if (khachHang == null) {
	
      out.write("\r\n");
      out.write("	<h1>Bạn chưa đăng nhập vào hệ thống. Vui lòng quay lại trang chủ!</h1>\r\n");
      out.write("	");

	} else {
	String baoLoi = request.getAttribute("baoLoi") + "";
	if (baoLoi.equals("null")) {
		baoLoi = "897980";
		
	}
	
      out.write('\r');
      out.write('\n');
      out.write('	');

	String url = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ request.getContextPath();
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h1 class=\"text-center\">Đổi mật khẩu</h1>\r\n");
      out.write("		<span style=\"color: red\" id=\"msg\"> ");
      out.print(baoLoi);
      out.write("</span>\r\n");
      out.write("\r\n");
      out.write("		<form action=\"");
      out.print(url);
      out.write("/khach-hang\" method=\"POST\">\r\n");
      out.write("			<input type=\"hidden\" name=\"hanhDong\" value=\"change-password\">\r\n");
      out.write("			<div class=\"mb-3\">\r\n");
      out.write("				<label for=\"matKhauHienTai\" class=\"form-label\">Mật khẩu hiện\r\n");
      out.write("					tại</label> <input type=\"password\" class=\"form-control\" id=\"matKhauHienTai\"\r\n");
      out.write("					name=\"matKhauHienTai\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"mb-3\">\r\n");
      out.write("				<label for=\"matKhauMoi\" class=\"form-label\">Mật khẩu mới<span\r\n");
      out.write("					class=\"red\">*</span><span id=\"msg2\" class=\"red\"></span>\r\n");
      out.write("				</label> <input type=\"password\" class=\"form-control\" id=\"matKhauMoi\"\r\n");
      out.write("					name=\"matKhauMoi\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"mb-3\">\r\n");
      out.write("				<label for=\"matKhauMoiNhapLai\" class=\"form-label\">Nhập lại\r\n");
      out.write("					mật khẩu mới<span class=\"red\">*</span><span id=\"msg1\" class=\"red\"></span>\r\n");
      out.write("				</label> <input type=\"password\" class=\"form-control\" id=\"matKhauMoiNhapLai\"\r\n");
      out.write("					name=\"matKhauMoiNhapLai\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<button onclick=\"kiemTraGiongNhauMatKhau()\" type=\"submit\"\r\n");
      out.write("				class=\"btn btn-primary\" id=\"save\">Lưu mật khẩu</button>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("		");

	String url = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ request.getContextPath();
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("    const getEleById = (id) => {\r\n");
      out.write("      return document.getElementById(id)\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("		function kiemTraKhopMatKhau() {\r\n");
      out.write("			matKhauMoi = getEleById(\"matKhauMoi\").value;\r\n");
      out.write("			matKhauMoiNhapLai = getEleById(\"matKhauMoiNhapLai\").value;\r\n");
      out.write("			if (matKhauMoi != matKhauMoiNhapLai) {\r\n");
      out.write("				getEleById(\"msg1\").innerHTML = \"Mật khẩu không khớp\";\r\n");
      out.write("				return false;\r\n");
      out.write("			} else {\r\n");
      out.write("				getEleById(\"msg1\").innerHTML = \"\";\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("    const kiemTraGiongNhauMatKhau = () => {\r\n");
      out.write("      let matKhauHienTai = getEleById(\"matKhauHienTai\").value;\r\n");
      out.write("     \r\n");
      out.write("      let matKhauMoi = getEleById(\"matKhauMoi\").value; \r\n");
      out.write("    \r\n");
      out.write("      let ketQua = false;    \r\n");
      out.write("      \r\n");
      out.write("     \r\n");
      out.write("       if (matKhauHienTai === matKhauMoi) {      \r\n");
      out.write("         alert(\"Mật khẩu mới trùng với mật khẩu hiện tại\")\r\n");
      out.write("       } else {\r\n");
      out.write("         alert(\"Đổi mật khẩu thành công, bạn sẽ được chuyển đến trang chủ\")\r\n");
      out.write("         ketQua = true;\r\n");
      out.write("      }\r\n");
      out.write("	 \r\n");
      out.write("      if (ketQua) {\r\n");
      out.write("        // window.location.href = \"");
      out.print(url );
      out.write("/index.jsp\";\r\n");
      out.write("    }}\r\n");
      out.write("	</script>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
